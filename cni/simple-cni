#!/bin/bash

# @author: Bruno Freitas
# @version 1 (09/Feb/2023)
# Inspiration: https://github.com/eranyanay/cni-from-scratch

# Function to get the container's IP address
get_ip(){
	if [ -f /tmp/last_allocated_ip ]; then
        ip=`cat /etc/cni/net.d/last_allocated_ip`
    else
        ip=1
    fi
    ip=$(($ip+1))
}

# Function to get the CNI version (specified in the CNI config file)
get_version(){
	version=$(cat /etc/cni/net.d/simple-cni.conf | jq -r ".cniVersion")
}

# Output template for the CNI ADD command
add_output_template='
{
	"cniVersion" : "%s",
	"interfaces" : [
		{
			"name"    : "%s",
			"mac"     : "%s",
			"sandbox" : "%s",
		}
	],
	"ips" : [
		{
			"version"   : "%s",
			"address"   : "%s",
			"gateway"   : "%s",
			"interface" : "%s"
		}
	]
}'

# Output template for the CNI VERSION command
version_output_template='
{
	"cniVersion" : "%s"
}'

case $CNI_COMMAND in
ADD)
    # Configure networking for the new container
	podcidr=$(cat /dev/stdin | jq -r ".podcidr") # returns NETWORK
	podcidr_gw=$(echo $podcidr | sed "s:0/24:1:g") # returns gateway finishing in address .1

	# Create a new bridge called cni0 and assign podcidr_gw/24 to it
	brctl addbr cni0
	ip link set cni0 up
	ip addr add "${podcidr_gw}/24" dev cni0

	# Create the VETH pair and attach one side to the bridge and the other side to 
	# the container's namespace
	if_id=$(date +%s%N | md5sum | head -c 6)
	host_ifname="veth ${if_id}"
	ip link add $CNI_IFNAME type veth peer name $host_ifname
	ip link set $host_ifname up
	ip link set $host_ifname master cni0
	ln -sfT $CNI_NETNS /var/run/netns/$CNI_CONTAINERID
	ip link set $CNI_IFNAME netns $CNI_CONTAINERID

	# Add the IP address to the container's namespace side interface
	ip_addr=`get_ip`
	ip netns exec $CNI_CONTAINERID ip link set $CNI_IFNAME up
	ip netns exec $CNI_CONTAINERID ip addr add $ip_addr/24 dev $CNI_IFNAME
	ip netns exec $CNI_CONTAINERID ip route add default via $podcidr_gw

	# Print the summary (contains Container Interface name, MAC address, IP address, 
	# and the namespace attached)
	output=$(printf "${add_output_template}" $version $CNI_IFNAME $mac $CNI_NETNS $ip_addr $podcidr_gw)
	echo "$output"
;;
DEL)
	# Delete the container's namespace (thus, all its networking)
	rm -rf /var/run/netns/$CNI_CONTAINERID
;;
GET)
	# Get the info about the container
;;
VERSION)
	# Print the plugin version
	version=`get_version`
	output=$(printf "${version_output_template}" $version)
	echo "$output"
;;
*)
  echo "Unknown cni command: $CNI_COMMAND" 
  exit 1
;;
esac
